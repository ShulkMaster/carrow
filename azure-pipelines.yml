# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreCLI@2
  name: 'Restore' 
  displayName: 'Restoring Packages and dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: 'c02610e3-ed5a-4422-8dfc-732f5bdef937'
    verbosityRestore: 'Normal'

- task: DotNetCoreCLI@2
  name: 'Build'
  displayName: 'Compiling Carrow'
  inputs:
    command: 'build'
    projects: 'Carrow/*.csproj'
    arguments: '--no-restore --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  name: 'BuildTest'
  displayName: 'Compiling CarrowTest'
  inputs:
    command: 'build'
    projects: 'CarrowTest/*.csproj'
    arguments: '--no-restore --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  name: 'Testing'
  displayName: 'Unit testing Carrow'
  inputs:
    command: 'test'
    projects: 'CarrowTest/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    testRunTitle: 'Carrow Test'

- task: PowerShell@2
  displayName: 'Running powehell documentation builder'
  inputs:
    filePath: 'scripts/script.ps1'
    arguments: '$(Build.ArtifactStagingDirectory)/packs/site.zip'
    showWarnings: true
      
- task: DotNetCoreCLI@2
  name: 'Packaging'
  displayName: 'Packaging Carrow'
  inputs:
    command: 'pack'
    packagesToPack: 'Carrow/*.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/packs'
    nobuild: true
    includesource: true
    includesymbols: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: '$(version)'

- task: PublishBuildArtifacts@1
  name: 'Droping' 
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/packs'
    ArtifactName: 'drop'
    publishLocation: 'Container'